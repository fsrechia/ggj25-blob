[gd_scene load_steps=13 format=3 uid="uid://bppn1jo6uahww"]

[ext_resource type="PackedScene" uid="uid://cdojqe8wlahxs" path="res://player/Player.tscn" id="1_e6wx7"]
[ext_resource type="Material" uid="uid://bb56vrpwj6p0x" path="res://materials/Stone.tres" id="2_3e4hk"]
[ext_resource type="Script" path="res://forces/PointGravity.gd" id="3_k6k61"]
[ext_resource type="Script" path="res://forces/GravityFalloffModelShifted.gd" id="4_rc4l4"]
[ext_resource type="Environment" uid="uid://dx1vxt3e1e0rc" path="res://camera/EmptySpace.tres" id="5_5kygm"]
[ext_resource type="PackedScene" uid="uid://muyule2qiun" path="res://Scenes/enemy.tscn" id="6_l5cww"]
[ext_resource type="Script" path="res://Scripts/AtmosphericBubble.gd" id="6_xcch3"]

[sub_resource type="SphereShape3D" id="3"]
radius = 50.0

[sub_resource type="SphereShape3D" id="2"]

[sub_resource type="SphereMesh" id="SphereMesh_mcsil"]

[sub_resource type="SphereShape3D" id="SphereShape3D_sh315"]

[sub_resource type="GDScript" id="GDScript_koije"]
script/source = "extends CharacterBody3D


const SPEED = 5.0
const JUMP_VELOCITY = 4.5


func _physics_process(delta: float) -> void:
	# Add the gravity.
	if not is_on_floor():
		velocity += get_gravity() * delta

	# Handle jump.
	if Input.is_action_just_pressed(\"ui_accept\") and is_on_floor():
		velocity.y = JUMP_VELOCITY

	# Get the input direction and handle the movement/deceleration.
	# As good practice, you should replace UI actions with custom gameplay actions.
	var input_dir := Input.get_vector(\"ui_left\", \"ui_right\", \"ui_up\", \"ui_down\")
	var direction := (transform.basis * Vector3(input_dir.x, 0, input_dir.y)).normalized()
	if direction:
		velocity.x = direction.x * SPEED
		velocity.z = direction.z * SPEED
	else:
		velocity.x = move_toward(velocity.x, 0, SPEED)
		velocity.z = move_toward(velocity.z, 0, SPEED)

	move_and_slide()
"

[node name="Node3D2" type="Node3D"]

[node name="Player" parent="." groups=["Player"] instance=ExtResource("1_e6wx7")]
transform = Transform3D(0.999894, 0, 0, 0, 0.999894, 0, 0, 0, 0.999894, 0.000900745, 50.9251, 0.068177)
collision_layer = 1

[node name="Planet" type="StaticBody3D" parent="."]

[node name="Mesh" type="CSGSphere3D" parent="Planet"]
radius = 50.0
radial_segments = 70
rings = 70
material = ExtResource("2_3e4hk")

[node name="CollisionShape3D" type="CollisionShape3D" parent="Planet"]
shape = SubResource("3")

[node name="GravityWell" type="Area3D" parent="Planet"]
collision_layer = 2
collision_mask = 0
monitoring = false
script = ExtResource("3_k6k61")

[node name="BoundingShape" type="CollisionShape3D" parent="Planet/GravityWell"]
shape = SubResource("2")

[node name="FalloffModel" type="Node" parent="Planet/GravityWell"]
script = ExtResource("4_rc4l4")
start_radius = 52.0

[node name="Light3D" type="Node" parent="."]

[node name="Sun" type="DirectionalLight3D" parent="Light3D"]
transform = Transform3D(1, 0, 0, 0, -4.37114e-08, 1, 0, -1, -4.37114e-08, -0.454285, 129.014, -0.860413)
shadow_enabled = true

[node name="LightmapGI" type="LightmapGI" parent="Light3D"]

[node name="WorldEnvironment" type="WorldEnvironment" parent="Light3D"]
environment = ExtResource("5_5kygm")

[node name="AtmosphericBubble" type="MeshInstance3D" parent="."]
transform = Transform3D(1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 50.9294, -3.82828)
mesh = SubResource("SphereMesh_mcsil")
script = ExtResource("6_xcch3")

[node name="StaticBody3D" type="StaticBody3D" parent="AtmosphericBubble"]
collision_layer = 2
collision_mask = 2

[node name="CollisionShape3D" type="CollisionShape3D" parent="AtmosphericBubble/StaticBody3D"]
shape = SubResource("SphereShape3D_sh315")

[node name="PinionCharacterBody3D" parent="." instance=ExtResource("6_l5cww")]
transform = Transform3D(1, 0, 0, 0, 1, 0, 0, 0, 1, 5.33316, 50.9162, -1.13713)
script = SubResource("GDScript_koije")
